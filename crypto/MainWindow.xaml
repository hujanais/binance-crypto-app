<Window x:Class="crypto.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:crypto"
        xmlns:converters="clr-namespace:crypto.Converters"
        mc:Ignorable="d"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Display"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        Title="Binance Crypto-Alert"
        Height="450"
        Width="800">
    <Grid>
        <Grid.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="Margin"
                        Value="5" />
            </Style>

            <converters:TrendConverter x:Key="trendConverter" />
            <converters:SignalConverter x:Key="signalConverter" />
            <converters:TrendColorConverter x:Key="trendColorConverter" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="4*" />
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal">
            <CheckBox IsChecked="{Binding IsLiveTrading}"
                      Margin="5" Content="LiveTrading"
                      VerticalAlignment="Center" />
            <Button Command="{Binding EnumeratePairsCommand}" IsEnabled="{Binding IsReady}"
                    Content="Enumerate"
                    Margin="5" />
            <TextBlock Text="Tick(hrs) " />
            <ComboBox ItemsSource="{Binding TickTimes}" Width="70" Margin="5"
                      SelectedItem="{Binding SelectedTickTime}" IsReadOnly="True"></ComboBox>
            <Grid>
                <ProgressBar Style="{DynamicResource MaterialDesignLinearProgressBar }"
                             Minimum="0"
                             Maximum="100"
                             Value="{Binding ProgressPercentage}"
                             Width="200"
                             Height="20"
                             VerticalAlignment="Center">
                </ProgressBar>
                <TextBlock HorizontalAlignment="Center"
                           VerticalAlignment="Center" Text="{Binding ProgressBarMessage}"/>
            </Grid>
            <TextBlock >Last Update: </TextBlock>
            <TextBlock Text="{Binding LastUpdated}" />
            <TextBlock >Next Update:</TextBlock>
            <TextBlock Text="{Binding NextUpdate}"/>
        </StackPanel>

        <ListView Grid.Row="1"
                  ItemsSource="{Binding Assets}"
                  SelectedItem="{Binding SelectedAsset}">
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="HorizontalContentAlignment"
                            Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border BorderBrush="Transparent"
                                        BorderThickness="0"
                                        Background="{TemplateBinding Background}">
                                    <GridViewRowPresenter HorizontalAlignment="Stretch"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          Width="Auto"
                                                          Margin="5"
                                                          Content="{TemplateBinding Content}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Ticker"
                                    DisplayMemberBinding="{Binding Ticker}" />
                    <GridViewColumn Header="Price"
                                    DisplayMemberBinding="{Binding Price}" />
                    <GridViewColumn Header="dEMA"
                                    DisplayMemberBinding="{Binding EmaSummary.DeltaEMA, StringFormat={}{0:0.00}}" />
                    <GridViewColumn Header="EMA Trend">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <materialDesign:PackIcon Foreground="{Binding EmaSummary.TrendSignal, Converter={StaticResource trendColorConverter}}"
                                                         Kind="{Binding EmaSummary.TrendSignal, Converter={StaticResource trendConverter}}"></materialDesign:PackIcon>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="EMA CrossOver">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="{Binding EmaSummary.CrossOverSignal, Converter={StaticResource trendColorConverter}}"
                                           Text="{Binding EmaSummary.CrossOverSignal, Converter={StaticResource signalConverter}}"></TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Macd"
                                    DisplayMemberBinding="{Binding MacdSummary.Macd, StringFormat={}{0:0.00}}" />
                    <GridViewColumn Header="Macd Signal"
                                    DisplayMemberBinding="{Binding MacdSummary.Signal, StringFormat={}{0:0.00}}" />
                    <GridViewColumn Header="Macd Histogram"
                                    DisplayMemberBinding="{Binding MacdSummary.Histogram, StringFormat={}{0:0.00}}" />
                    <GridViewColumn Header="Macd Trend">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <materialDesign:PackIcon Foreground="{Binding MacdSummary.TrendSignal, Converter={StaticResource trendColorConverter}}" Kind="{Binding MacdSummary.TrendSignal, Converter={StaticResource trendConverter}}"></materialDesign:PackIcon>
                            </DataTemplate>                            
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Macd CrossOver">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="{Binding MacdSummary.CrossOverSignal, Converter={StaticResource trendColorConverter}}" Text="{Binding MacdSummary.CrossOverSignal, Converter={StaticResource signalConverter}}"></TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="HasTrade" DisplayMemberBinding="{Binding HasTrade}"></GridViewColumn>
                    <GridViewColumn Header="BuyPrice"
                                    DisplayMemberBinding="{Binding BuyPrice}"></GridViewColumn>
                    <GridViewColumn Header="PL%"
                                    DisplayMemberBinding="{Binding UnrealizedPLPercentage,StringFormat={}{0:0.00}}"></GridViewColumn>
                    <GridViewColumn Header="Wallet"
                                    DisplayMemberBinding="{Binding Amount,StringFormat={}{0:0.00}}"></GridViewColumn>
                    <GridViewColumn>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="Sell"
                                        Background="DarkRed"
                                        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.SellCommand}"
                                        CommandParameter="{Binding}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="Reset"
                                        Style="{StaticResource MaterialDesignRaisedAccentButton}"
                                        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.ResetCommand}"
                                        CommandParameter="{Binding}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="2*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal"
                        Margin="5">
                <TextBlock Text="{Binding SelectedAsset.Ticker}"
                           Margin="5" />
                <TextBlock Text="{Binding SelectedAsset.Price}"
                           Margin="5" />
                <ComboBox ItemsSource="{Binding TickTimes}"
                          Width="70"
                          Margin="5"
                          SelectedItem="{Binding SelectedAssetTickTime}"></ComboBox>
                <materialDesign:PackIcon VerticalAlignment="Center" 
                                         Kind="{Binding SelectedAsset.MacdSummary.TrendSignal, Converter={StaticResource trendConverter}}"
                                         Foreground="{Binding SelectedAsset.MacdSummary.TrendSignal, Converter={StaticResource trendColorConverter}}"></materialDesign:PackIcon>
                <Button Content="Reset Zoom"
                        Margin="5" Click="Button_Click"/>
            </StackPanel>
            <lvc:CartesianChart Grid.Row="1" Name="chart1"
                                DisableAnimations="True"
                                Hoverable="False"
                                DataTooltip="{x:Null}"
                                Series="{Binding SeriesCollection}">
                <lvc:CartesianChart.AxisY>
                    <lvc:Axis Foreground="DodgerBlue"
                              Title="Blue Axis" Position="RightTop">
                            <lvc:Axis.Separator>
                            <lvc:Separator Stroke="#cd2a27" />
                            </lvc:Axis.Separator>
                    </lvc:Axis>
                </lvc:CartesianChart.AxisY>
            </lvc:CartesianChart>
            <lvc:CartesianChart Grid.Row="2" Name="chart2"
                                Hoverable="False"
                                DataTooltip="{x:Null}"
                                Series="{Binding MacdCollection}">
                <lvc:CartesianChart.AxisY>
                    <lvc:Axis Foreground="DodgerBlue" Position="RightTop"
                              Title="Blue Axis">
                        <lvc:Axis.Separator>
                            <lvc:Separator Stroke="#cd2a27" />
                        </lvc:Axis.Separator>
                    </lvc:Axis>
                </lvc:CartesianChart.AxisY>
            </lvc:CartesianChart>
        </Grid>



    </Grid>
</Window>